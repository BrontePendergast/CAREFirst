apiVersion: apps/v1
kind: Deployment
metadata:
  name: pythonapi
  namespace: w255
  labels:
    app: pythonapi
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pythonapi
  template:
    metadata:
      labels:
        app: pythonapi
    spec:
      containers:
      - name: pythonapi
        image: lab4:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "64Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /health
            port: 8000
          initialDelaySeconds: 1
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
      initContainers:
      - name: init-verify-redis-dns
        image: busybox
        command:
          [
            "sh",
            "-c",
            "until nc -vz redis 6379; do echo 'waiting for redis from DNS';sleep 2; done",
          ]
      - name: init-verify-redis-ready
        image: busybox
        command:
          [
            "sh",
            "-c",
            "until (printf 'PING\r\n';) | nc redis 6379 ; do echo 'waiting for redis to PONG'; sleep 1; done",
          ]
        

      